{"version":3,"file":"component---src-pages-series-tsx-654f6dcf789e4a62774e.js","mappings":"oLAkDMA,EAAQC,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,yGAIA,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,WA4CzC,UArCmB,SAAC,GAAqB,IACjCC,EADgC,EAAlBC,KACDC,kBAAkBC,MAC/BC,GAASC,EAAAA,EAAAA,IACbL,GACAM,EAAAA,EAAAA,KAAI,SAACC,GAAD,wBAAgBA,EAAKC,YAArB,CAAkCC,KAAMF,EAAKG,OAAOD,WACxDE,EAAAA,EAAAA,KAAQ,SAACJ,GAAD,OAAUA,EAAKH,UACvBQ,EAAAA,IACAN,EAAAA,EAAAA,KAAI,gBAAIF,EAAJ,WAAiB,CACnBS,KAAMT,EAAO,GAAGA,OAChBJ,MAAOI,EACPU,YAAaV,EAAO,GAAGW,UAEzBC,EAAAA,EAAAA,KAAO,SAACZ,GAAD,OAAY,IAAIa,KAAKb,EAAOU,iBACnCI,EAAAA,EAAAA,KAAO,SAACd,GAAD,OAAYA,EAAOS,QAC1BM,EAAAA,GACAC,EAAAA,IAGF,OACEC,EAAAA,cAACC,EAAAA,GAAD,KACED,EAAAA,cAACE,EAAAA,GAAD,CACEC,MAAOC,EAAAA,EAAAA,MACPC,YAAaD,EAAAA,EAAAA,YACbE,IAAKF,EAAAA,EAAAA,UAGPJ,EAAAA,cAAC3B,EAAD,KAAQU,EAAOwB,OAAf,WAEmB,IAAlBxB,EAAOwB,QAAgBP,EAAAA,cAACQ,EAAAA,GAAD,CAAWhB,KAAK,WAExCQ,EAAAA,cAACS,EAAAA,GAAD,CAAeC,KAAM,KAErBV,EAAAA,cAACW,EAAAA,GAAD,CAAYC,WAAY7B","sources":["webpack://6h15m.github.io/./src/pages/series.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  pipe,\n  map,\n  groupBy,\n  entries,\n  sortBy,\n  filter,\n  reverse,\n  toArray,\n} from \"@fxts/core\";\nimport styled from \"styled-components\";\nimport { graphql } from \"gatsby\";\nimport BlogConfig from \"../../blog-config\";\nimport {\n  SEO,\n  Layout,\n  SeriesList,\n  VerticalSpace,\n  NoContent,\n} from \"../components\";\n\ntype Frontmatter = {\n  date: string;\n  update: string;\n  title: string;\n  tags: Array<string>;\n  series: string;\n  description: string | null;\n};\n\ntype MarkDownRemarkGroupConnection = {\n  id: string;\n  fields: {\n    slug: string;\n  };\n  frontmatter: Frontmatter;\n  rawMarkdownBody: string;\n};\n\ntype PageQueryResult = {\n  allMarkdownRemark: {\n    nodes: Array<MarkDownRemarkGroupConnection>;\n  };\n};\n\ntype Props = {\n  data: PageQueryResult;\n};\n\nconst Title = styled.div`\n  font-size: 14px;\n  text-align: right;\n  margin-top: 50px;\n  color: ${(props) => props.theme.colors.primary};\n\n  @media (max-width: 768px) {\n    padding: 0 15px;\n  }\n`;\n\nconst SeriesPage = ({ data }: Props) => {\n  const posts = data.allMarkdownRemark.nodes;\n  const series = pipe(\n    posts,\n    map((post) => ({ ...post.frontmatter, slug: post.fields.slug })),\n    groupBy((post) => post.series),\n    entries,\n    map(([, series]) => ({\n      name: series[0].series,\n      posts: series,\n      lastUpdated: series[0].date,\n    })),\n    sortBy((series) => new Date(series.lastUpdated)),\n    filter((series) => series.name),\n    reverse,\n    toArray,\n  );\n\n  return (\n    <Layout>\n      <SEO\n        title={BlogConfig.title}\n        description={BlogConfig.description}\n        url={BlogConfig.siteUrl}\n      />\n\n      <Title>{series.length} Series</Title>\n\n      {series.length === 0 && <NoContent name=\"series\" />}\n\n      <VerticalSpace size={14} />\n\n      <SeriesList seriesList={series} />\n    </Layout>\n  );\n};\n\nexport default SeriesPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          update(formatString: \"MMM DD, YYYY\")\n          title\n          tags\n          series\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["Title","styled","props","theme","colors","primary","posts","data","allMarkdownRemark","nodes","series","pipe","map","post","frontmatter","slug","fields","groupBy","entries","name","lastUpdated","date","sortBy","Date","filter","reverse","toArray","React","Layout","SEO","title","BlogConfig","description","url","length","NoContent","VerticalSpace","size","SeriesList","seriesList"],"sourceRoot":""}