{
    "componentChunkName": "component---src-templates-post-tsx",
    "path": "/rxjs-observer/",
    "result": {"data":{"site":{"siteMetadata":{"title":"영의 시간"}},"markdownRemark":{"id":"f76505b5-ec0f-51d7-8acd-c753e834575e","excerpt":"프롤로그 안녕하세요! 제로입니다.\n이번 게시물에는 공식 문서 가이드의 Observer 문서를 번역해보려 합니다.\n저번 문서인 RxJS Observable 공식 문서 번역 을 읽고 오시면 옵저버에 대해서 훨씬 더 쉽게 이해하실 수 있을 거에요! Observer(옵저버) 소개 옵저버란? 옵저버는 옵저버블에 의해 전달되는 값의 소비자입니다.\n간단히 말하자면 콜…","html":"<h2>프롤로그</h2>\n<p>안녕하세요! 제로입니다.\n이번 게시물에는 공식 문서 가이드의 <a href=\"https://rxjs.dev/guide/observer\">Observer</a> 문서를 번역해보려 합니다.\n저번 문서인 <a href=\"https://6h15m.github.io/rxjs-observable/\">RxJS Observable 공식 문서 번역</a> 을 읽고 오시면 옵저버에 대해서 훨씬 더 쉽게 이해하실 수 있을 거에요!</p>\n<h2>Observer(옵저버) 소개</h2>\n<p><strong>옵저버란?</strong> 옵저버는 옵저버블에 의해 전달되는 값의 소비자입니다.\n간단히 말하자면 콜백 세트로, 옵저버블에서 제공하는 타입의 알림(: <code class=\"language-text\">next</code>, <code class=\"language-text\">error</code>, <code class=\"language-text\">complete</code>)에 대해 각자 하나씩 제공하게 됩니다.\n다음은 일반적인 옵저버 객체의 예시입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"옵저버가 next 값을 전달받았습니다: \"</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">error</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"옵저버가 에러를 전달받았습니다: \"</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">complete</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"옵저버가 complete 알림을 전달받았습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>옵저버를 사용하려면, 옵저버블의 <code class=\"language-text\">subscribe</code>에 전달해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\">observable<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<blockquote>\n<p>옵저버는 옵저버블이 전달할 수 있는 알림 타입에 대해 각 하나씩, 총 세 개의 콜백을 가진 객체입니다.</p>\n</blockquote>\n<p>RxJS의 옵저버는 <em>부분적일</em> 수 있습니다.\n콜백 중 하나를 제공하지 않았을 때, 해당 콜백이 없기 때문에 옵저버에서 일부 알림이 무시되는 것을 제외하면 옵저버블의 실행이 정상적으로 수행됩니다.</p>\n<p>아래의 예제는 <code class=\"language-text\">complete</code> 콜백을 제공하지 않은 <code class=\"language-text\">옵저버</code>입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">next</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"옵저버가 next 값을 전달받았습니다: \"</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">error</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"옵저버가 에러를 전달받았습니다: \"</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">옵저버블</code>을 구독할 때, next 콜백을 <code class=\"language-text\">옵저버</code> 객체에 연결하지 않고 인수로 전달할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\">observable<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"옵저버가 next 값을 전달받았습니다: \"</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">observable.subscribe</code>가 내부적으로 콜백 인수를 <code class=\"language-text\">next</code> 핸들러로 사용하는 <code class=\"language-text\">옵저버</code> 객체를 생성하기에 가능한 일입니다.</p>","frontmatter":{"title":"[번역] RxJS 공식 문서 #Observer","date":"2022.04.12","update":"2022.04.12","tags":["RxJS","Reactive Programming"],"series":"RxJS 공식 문서 번역","description":"🇰🇷 Observer, 너는 또 누구냐-"},"fields":{"slug":"/rxjs-observer/","readingTime":{"minutes":2.755}}},"seriesList":{"edges":[{"node":{"id":"9da63484-acd9-5100-8fa1-bc2a3475c1ae","fields":{"slug":"/rxjs-overview/"},"frontmatter":{"title":"[번역] RxJS 공식 문서 #OVERVIEW"}}},{"node":{"id":"5d406279-db33-5aa2-a888-bfc41706a9ef","fields":{"slug":"/rxjs-observable/"},"frontmatter":{"title":"[번역] RxJS 공식 문서 #Observable"}}},{"node":{"id":"f76505b5-ec0f-51d7-8acd-c753e834575e","fields":{"slug":"/rxjs-observer/"},"frontmatter":{"title":"[번역] RxJS 공식 문서 #Observer"}}},{"node":{"id":"83526932-48ad-578e-9a1d-4a9044874ed7","fields":{"slug":"/rxjs-operators/"},"frontmatter":{"title":"[번역] RxJS 공식 문서 #Operators"}}},{"node":{"id":"da0361fe-dbe1-579e-8fe1-99b9fed97a94","fields":{"slug":"/rxjs-subscription/"},"frontmatter":{"title":"[번역] RxJS 공식 문서 #Subscription"}}}]},"previous":{"fields":{"slug":"/rxjs-observable/"},"frontmatter":{"title":"[번역] RxJS 공식 문서 #Observable"}},"next":{"fields":{"slug":"/rxjs-operators/"},"frontmatter":{"title":"[번역] RxJS 공식 문서 #Operators"}}},"pageContext":{"id":"f76505b5-ec0f-51d7-8acd-c753e834575e","series":"RxJS 공식 문서 번역","previousPostId":"5d406279-db33-5aa2-a888-bfc41706a9ef","nextPostId":"83526932-48ad-578e-9a1d-4a9044874ed7"}},
    "staticQueryHashes": ["869547123"]}