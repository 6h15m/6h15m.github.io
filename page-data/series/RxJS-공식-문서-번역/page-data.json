{
    "componentChunkName": "component---src-templates-series-tsx",
    "path": "/series/RxJS-공식-문서-번역",
    "result": {"data":{"posts":{"nodes":[{"excerpt":"프롤로그 안녕하세요! 제로입니다.\n최근 RxJS를 사용할 일이 생겨 열심히 학습하던 중, Learn RxJS 라는 문서를 발견해 번역해보고 있었어요.\n공식 문서보다 조금 더 알기 쉽게 설명되어 있는 것 같아 학습에 큰 도움이 되었지만,\nv6 이후로 업데이트되지 않아 deprecated 된 자료들이 꽤 많았습니다. 저희의 Learn RxJS 가 정확한 학습…","fields":{"slug":"/rxjs-overview/"},"frontmatter":{"date":"April 06, 2022","update":"Apr 06, 2022","title":"[번역] RxJS 공식 문서 #OVERVIEW","tags":["RxJS","Reactive Programming"],"series":"RxJS 공식 문서 번역"}},{"excerpt":"프롤로그 안녕하세요! 제로입니다.\n저번의 RxJS 공식 문서 OVERVIEW 번역 에 이어,\n공식 문서 가이드의 Observable 문서를 번역해보려 합니다. Observable(옵저버블) 소개 옵저버블은 여러 값들에 대한 \"Lazy Push\" 콜렉션입니다.  Single Multiple Pull   Push   예제. 아래의 코드는 구독 즉시(동기적으로…","fields":{"slug":"/rxjs-observable/"},"frontmatter":{"date":"April 11, 2022","update":"Apr 11, 2022","title":"[번역] RxJS 공식 문서 #Observable","tags":["RxJS","Reactive Programming"],"series":"RxJS 공식 문서 번역"}},{"excerpt":"프롤로그 안녕하세요! 제로입니다.\n이번 게시물에는 공식 문서 가이드의 Observer 문서를 번역해보려 합니다.\n저번 문서인 RxJS Observable 공식 문서 번역 을 읽고 오시면 옵저버에 대해서 훨씬 더 쉽게 이해하실 수 있을 거에요! Observer(옵저버) 소개 옵저버란? 옵저버는 옵저버블에 의해 전달되는 값의 소비자입니다.\n간단히 말하자면 콜…","fields":{"slug":"/rxjs-observer/"},"frontmatter":{"date":"April 11, 2022","update":"Apr 11, 2022","title":"[번역] RxJS 공식 문서 #Observer","tags":["RxJS","Reactive Programming"],"series":"RxJS 공식 문서 번역"}},{"excerpt":"프롤로그 안녕하세요! 제로입니다.\n저번의 RxJS 공식 문서 번역 #Observer 에 이어,\n공식 문서 가이드의 Operators 문서를 번역해보려 합니다. RxJS Operator(연산자) 소개 RxJS는 연산자 덕분에 유용합니다. 옵저버블 기반인데도 말이죠.\n연산자는 복잡한 비동기 코드를 쉽게 선언적으로 구성할 수 있도록 해주는 필수적 요소입니다. …","fields":{"slug":"/rxjs-operators/"},"frontmatter":{"date":"April 12, 2022","update":"Apr 12, 2022","title":"[번역] RxJS 공식 문서 #Operators","tags":["RxJS","Reactive Programming"],"series":"RxJS 공식 문서 번역"}},{"excerpt":"프롤로그 안녕하세요! 제로입니다.\n이번에 번역해본 문서는 Subscription 입니다.\n옵저버블과 연산자 등에 대해서 공부해보았으니, 직접적으로 실행하는 부분인 구독도 자세히 알아볼까요? Subscription(구독) 소개 구독은 일회성 리소스 객체로, RxJS에서는 옵저버블의 실행을 나타냅니다.\n구독에는 매우 중요한 메소드인 가 존재합니다.\n이 메소드…","fields":{"slug":"/rxjs-subscription/"},"frontmatter":{"date":"April 12, 2022","update":"Apr 12, 2022","title":"[번역] RxJS 공식 문서 #Subscription","tags":["RxJS","Reactive Programming"],"series":"RxJS 공식 문서 번역"}},{"excerpt":"프롤로그 안녕하세요! 제로입니다.\n이번에 번역해본 문서는 특별한 옵저버블인 Subject 가이드 입니다.\n여러 형태를 가지고 있는 다양한 Subject들을 함께 배워봅시다! Subject 소개 Subject는 여러 옵저버에 값을 멀티캐스팅할 수 있는 특별한 옵저버블입니다.\n일반 옵저버블이 유니캐스트(구독한 옵저버는 옵저버블의 독립적인 실행을 갖는 방식)라…","fields":{"slug":"/rxjs-subject/"},"frontmatter":{"date":"April 12, 2022","update":"Apr 12, 2022","title":"[번역] RxJS 공식 문서 #Subject","tags":["RxJS","Reactive Programming"],"series":"RxJS 공식 문서 번역"}},{"excerpt":"프롤로그 안녕하세요! 제로입니다.\n이번에 번역해본 문서는 특별한 옵저버블인 Scheduler 가이드 입니다.\n공식 가이드 문서를 모두 번역하는 날이 얼마 남지 않았네요! 계속 달려보겠습니다- 💨 Scheduler(스케쥴러) 소개 Scheduler는 구독 시작 타이밍과 알림 전달 타이밍을 제어합니다.\nScheduler는 아래 세 가지로 구성되어 있는데요, …","fields":{"slug":"/rxjs-scheduler/"},"frontmatter":{"date":"April 12, 2022","update":"Apr 12, 2022","title":"[번역] RxJS 공식 문서 #Scheduler","tags":["RxJS","Reactive Programming"],"series":"RxJS 공식 문서 번역"}}]}},"pageContext":{"series":"RxJS 공식 문서 번역"}},
    "staticQueryHashes": ["869547123"]}